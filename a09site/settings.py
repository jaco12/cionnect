"""
Django settings for a09site project.

Generated by 'django-admin startproject' using Django 4.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os, sys
from pathlib import Path
from dotenv import load_dotenv

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-au(v@wcts@602#1)0d4c)+%_pjx27hb_ttm&t2wg(vdim37jzy'

# The `DYNO` env var is set on Heroku CI, but it's not a real Heroku app, so we have to
# also explicitly exclude CI:
# https://devcenter.heroku.com/articles/heroku-ci#immutable-environment-variables
IS_HEROKU_APP = "DYNO" in os.environ and not "CI" in os.environ

# Code obtained from: https://github.com/heroku/python-getting-started/blob/main/gettingstarted/settings.py
# SECURITY WARNING: don't run with debug turned on in production!
if not IS_HEROKU_APP:
    DEBUG = True

# On Heroku, it's safe to use a wildcard for `ALLOWED_HOSTS``, since the Heroku router performs
# validation of the Host header in the incoming HTTP request. On other platforms you may need to
# list the expected hostnames explicitly in production to prevent HTTP Host header attacks. See:
# https://docs.djangoproject.com/en/5.1/ref/settings/#std-setting-ALLOWED_HOSTS
if IS_HEROKU_APP:
    ALLOWED_HOSTS = ["*"]
else:
    ALLOWED_HOSTS = [".localhost", "127.0.0.1", "[::1]", "0.0.0.0"]

SITE_ID=3

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'defaultapp',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'bootstrap5',
    'sslserver', 
    'csp', 
]

SOCIALACCOUNT_PROVIDERS = {
    "google": {
        "SCOPE": ["profile", "email"],
        'APP': {
            'client_id': os.getenv('GOOGLE_LOGIN_CLIENT_ID'),
            'secret': os.getenv('GOOGLE_LOGIN_SECRET_KEY'),
            'key': ''
        }
    },
    "AUTH_PARAMS": {"access_type": "online" }
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    "csp.middleware.CSPMiddleware"
]

ROOT_URLCONF = 'a09site.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'a09site.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2', 
        'NAME': 'dbr935rak54i1j', 
        'USER': 'u499mp2b9l954d', 
        'PASSWORD': 'p498f10216a970547b007a26e474f15afe06d8e85413c4b2e20dabecf0de2b061', 
        'HOST': 'cfls9h51f4i86c.cluster-czrs8kj4isg7.us-east-1.rds.amazonaws.com', 
        'PORT': '5432',
        'TEST': {
            'ENGINE': 'django.db.backends.sqlite3',  # Use SQLite for testing
            'NAME': ':memory:',  # Use an in-memory SQLite database for faster tests
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


AUTHENTICATION_BACKENDS = (
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend"
)

LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/"

GOOGLE_LOGIN_CLIENT_ID = "1060984055914-89c4jabongojbesgvksoipglhplsim1a.apps.googleusercontent.com"#os.getenv('GOOGLE_LOGIN_CLIENT_ID')
GOOGLE_LOGIN_SECRET_KEY = "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"#os.getenv('GOOGLE_LOGIN_SECRET_KEY')

AWS_ACCESS_KEY_ID = "AKIASVQKHZL4EMDPAKXX"#os.getenv('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = "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"#os.getenv('AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = 'a09-static'
AWS_S3_SIGNATURE_NAME = 's3v4'
AWS_S3_REGION_NAME = 'us-east-2'
AWS_S3_FILE_OVERWRITE = False
AWS_DEFAULT_ACL = None
AWS_S3_VERITY = True

DEFAULT_FILE_STORAGE = 'a09site.storage_backends.MediaStorage'

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

STATICFILES_DIRS = [
    BASE_DIR / "static",
]

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

import dj_database_url  # Make sure `dj-database-url` is installed

DATABASES = {
     'default': dj_database_url.config(default='postgres://u499mp2b9l954d:p498f10216a970547b007a26e474f15afe06d8e85413c4b2e20dabecf0de2b061@cfls9h51f4i86c.cluster-czrs8kj4isg7.us-east-1.rds.amazonaws.com:5432/dbr935rak54i1j')
}

if 'test' in sys.argv or os.environ.get('DJANGO_TESTING'):
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': ':memory:',
        }
    }

# Optionally add a check for testing in CI/CD
if os.getenv('GITHUB_ACTIONS'):
    DEBUG = False
    SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'default-secret-key')

if IS_HEROKU_APP:
    SECURE_HSTS_SECONDS = 31536000  # 1 year in seconds
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True  # Apply to all subdomains
    SECURE_HSTS_PRELOAD = True  # Preload directive for browsers
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
else:
    SECURE_HSTS_SECONDS = 0  # 1 year in seconds
    SECURE_HSTS_INCLUDE_SUBDOMAINS = False  # Apply to all subdomains
    SECURE_HSTS_PRELOAD = False  # Preload directive for browsers
    SECURE_SSL_REDIRECT = False
    SESSION_COOKIE_SECURE = False

CSRF_COOKIE_SECURE = True

CSP_DEFAULT_SRC = ["'self'"]
CSP_STYLE_SRC = [
    "'self'",
    "'unsafe-inline'", 
    "https://cdn.jsdelivr.net",  # Allow Bootstrap CSS
]
CSP_SCRIPT_SRC = [
    "'self'",
    "'unsafe-inline'", 
    "https://cdn.jsdelivr.net",  # Allow Bootstrap JavaScript
]
CSP_FONT_SRC = [
    "'self'",
    "'unsafe-inline'", 
    "https://cdn.jsdelivr.net",  # If Bootstrap uses external fonts
]
CSP_IMG_SRC = ["'self'", "'unsafe-inline'", "data:", "https://cdn.jsdelivr.net"]

# DEBUG = False


